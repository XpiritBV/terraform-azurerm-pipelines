name: "Terraform Validate and Plan"

on:
    workflow_call:
        inputs:
            example-directory:
                default: "examples/defaults"
                type: string
            source-directory:
                default: "src"
                type: string
            oidc-subscription-id:
                default: "26995ed0-e32c-4de1-a7e6-00e42515a9cf"
                type: string
            oidc-tenant-id:
                default: "7c610feb-cf42-415e-8505-b64523147f9f"
                type: string
            oidc-client-id:
                default: "43d1d79d-db04-425d-b3ae-1827cad1df49"
                type: string

env:
    TERRAFORM_VERSION: "1.5.3"

jobs:
    validate_terraform:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v1
              with:
                    terraform_wrapper: false
                    terraform_version: ${{ env.TERRAFORM_VERSION }}              

            - name: Install tflint
              run: |
                    curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash                

            - name: Run tflint
              working-directory: ${{ inputs.source-directory }}
              run: |
                    curl -O https://raw.githubusercontent.com/XpiritBV/terraform-azurerm-pipelines/main/.tflint.hcl
                    tflint --init --config .tflint.hcl
                    tflint --recursive --config .tflint.hcl

            - name: Test with Checkov
              id: checkov
              uses: bridgecrewio/checkov-action@v12
              continue-on-error: true
              with:
                directory: ${{ inputs.source-directory }}
                framework: terraform          

            - name: 'Az CLI login'
              uses: azure/login@v1
              with:
                  client-id: ${{ inputs.oidc-client-id }}
                  tenant-id: ${{ inputs.oidc-tenant-id }}
                  subscription-id: ${{ inputs.oidc-subscription-id }}

            - name: Terraform validate and plan
              id: plan
              continue-on-error: true
              working-directory: ${{ inputs.example-directory }}
              run: |
                    export ARM_SUBSCRIPTION_ID=${{ inputs.oidc-subscription-id }}
                    export ARM_TENANT_ID=${{ inputs.oidc-tenant-id }}
                    export ARM_CLIENT_ID=${{ inputs.oidc-client-id }}
                    export ARM_USE_OIDC=true
                    terraform init -backend=false
                    terraform validate

                    terraform plan -detailed-exitcode -out terraform.plan 2>&1 || true
                    tf_exitcode=$?
                    echo "Exitcode: $tf_exitcode"
                    
                    terraform show -no-color terraform.plan > ${{ github.workspace }}/terraform.text
                    terraform show -json terraform.plan > ${{ github.workspace }}/terraform.json

                    echo "::set-output name=exitcode::$tf_exitcode"

            - name: Update PR
              uses: ahmadnassri/action-terraform-report@v3
              if: github.event_name == 'pull_request'
              id: plan-comment
              with:
                terraform-text: ${{ github.workspace }}/terraform.text
                terraform-json: ${{ github.workspace }}/terraform.json
                remove-stale-reports: true

            - name: Use terraform plan exit code
              # Terraform plan exit code 0 or 2 are acceptable, see: https://developer.hashicorp.com/terraform/cli/commands/plan#detailed-exitcode
              if: steps.plan.outputs.exitcode != '2'
              run: exit ${{ steps.plan.outputs.exitcode }}
